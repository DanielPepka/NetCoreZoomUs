@{
    ViewData["Title"] = "Home Page";
}

<script src="https://source.zoom.us/1.6.0/lib/vendor/react.min.js"></script>
<script src="https://source.zoom.us/1.6.0/lib/vendor/react-dom.min.js"></script>
<script src="https://source.zoom.us/1.6.0/lib/vendor/redux.min.js"></script>
<script src="https://source.zoom.us/1.6.0/lib/vendor/redux-thunk.min.js"></script>
<script src="https://source.zoom.us/1.6.0/lib/vendor/jquery.min.js"></script>
<script src="https://source.zoom.us/1.6.0/lib/vendor/lodash.min.js"></script>

<script src="https://source.zoom.us/zoom-meeting-1.6.0.min.js"></script>

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Meeting number is :  @ViewBag.MeetingNumber</p>
</div>

@section Scripts{

    <script>

    window.rootUrl = "@Url.Action("Index", "Home", null, "https")";

    $(function() {
       console.log('the meeting number is: ' + '@ViewBag.MeetingNumber');
       console.log(JSON.stringify(ZoomMtg.checkSystemRequirements()));

      ZoomMtg.preLoadWasm();
      ZoomMtg.prepareJssdk();

       var StartMeeting = function () {
            var meetConfig = {
                MeetingNumber: 358560270,// "@ViewBag.MeetingNumber", //parseInt(document.getElementById('meeting_number').value),
                UserName: "daniel", //  document.getElementById('display_name').value
                PassWord: "",
                LeaveUrl: "https://zoom.us",
                Role: 0
           };
           console.log("base url: ", window.rootUrl);

           	$.get(window.rootUrl + "api/Zoom/Meeting?" + new URLSearchParams(meetConfig))
            .done((data) => {
                // TODO: generating the zoom credentials isn't working. The c# example generates a signature that is rejectd.
                //var signature = ZoomMtg.generateSignature({
                //    meetingNumber: data.meetingNumber,
                //    apiKey: data.apiKey,
                //    apiSecret: data.apiSecret,
                //    role: meetConfig.Role,
                //    success: function(res){
                //        console.log(res.result);
                //    }
                //});
                //console.log("js sig:", signature);

                console.log("c# sig:", data.zoomToken);

                ZoomMtg.init({
                    leaveUrl: meetConfig.LeaveUrl,
                    isSupportAV: true,
                    success: function () {
                        ZoomMtg.join(
                            {
                                meetingNumber: data.meetingNumber, // meetConfig.MeetingNumber,
                                userName: meetConfig.UserName,
                                signature: data.zoomToken, // signature
                                apiKey: data.apiKey,
                                userEmail: 'kull2222@gmail.com',
                                passWord: meetConfig.passWord,
                                success: function (res) {
                                    console.log('join meeting success');
                                },
                                error: function (res) {
                                    console.log(res);
                                }
                            }
                        );
                    },
                    error: function (res) {
                        console.log(res);
                    }
                });
			});
       };

        StartMeeting();
    });
    </script>
}